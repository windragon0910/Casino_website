import { CoinpaymentsCredentials, CoinpaymentsReturnCallback } from './types/base';
import { CoinpaymentsRatesOpts, CoinpaymentsGetCallbackAddressOpts, CoinpaymentsCreateTransactionOpts, CoinpaymentsGetTxOpts, CoinpaymentsGetTxMultiOpts, CoinpaymentsGetTxListOpts, CoinpaymentsBalancesOpts, CoinpaymentsGetDepositAddressOpts, CoinpaymentsCreateMassWithdrawalOpts, CoinpaymentsConvertCoinsOpts, CoinpaymentsConvertLimitsOpts, CoinpaymentsGetWithdrawalHistoryOpts, CoinpaymentsGetWithdrawalInfoOpts, CoinpaymentsCancelWithdrawalOpts, CoinpaymentsGetConversionInfoOpts, CoinpaymentsGetProfileOpts, CoinpaymentsClaimTagOpts, CoinpaymentsUpdateTagProfileOpts, CoinpaymentsRenewTagOpts, CoinpaymentsDeleteTagOpts, CoinpaymentsClaimCouponOpts, CoinpaymentsBuyTagOpts, CoinpaymentsCreateTransferOpts, CoinpaymentsCreateWithdrawalOpts } from './types/options';
import { CoinpaymentsRatesResponse, CoinpaymentsCreateTransactionResponse, CoinpaymentsBalancesResponse, CoinpaymentsCreateWithdrawalResponse, CoinpaymentsCreateMassWithdrawalResponse, CoinpaymentsGetTxResponse, CoinpaymentsGetWithdrawalInfoResponse, CoinpaymentsGetTxListResponse, CoinpaymentsGetTxMultiResponse, CoinpaymentsGetBasicInfoResponse, CoinpaymentsGetDepositAddressResponse, CoinpaymentsGetCallbackAddressResponse, CoinpaymentsCreateTransferResponse, CoinpaymentsConvertCoinsResponse, CoinpaymentsConvertLimitsResponse, CoinpaymentsGetWithdrawalHistoryResponse, CoinpaymentsConversionInfoResponse, CoinpaymentsGetProfileResponse, CoinpaymentsTagListResponse, CoinpaymentsUpdateTagProfileResponse, CoinpaymentsClaimTagResponse, CoinpaymentsRenameTagResponse, CoinpaymentsDeleteTagResponse, CoinpaymentsClaimCouponResponse, CoinpaymentsBuyTagResponse } from './types/response';
declare class Coinpayments {
    private credentials;
    constructor({ key, secret }: CoinpaymentsCredentials);
    rates(options?: CoinpaymentsRatesOpts | CoinpaymentsReturnCallback<CoinpaymentsRatesResponse>, callback?: CoinpaymentsReturnCallback<CoinpaymentsRatesResponse>): Promise<CoinpaymentsRatesResponse>;
    createTransaction(options: CoinpaymentsCreateTransactionOpts, callback?: CoinpaymentsReturnCallback<CoinpaymentsCreateTransactionResponse>): Promise<CoinpaymentsCreateTransactionResponse>;
    balances(options?: CoinpaymentsBalancesOpts | CoinpaymentsReturnCallback<CoinpaymentsBalancesResponse>, callback?: CoinpaymentsReturnCallback<CoinpaymentsBalancesResponse>): Promise<CoinpaymentsBalancesResponse>;
    createWithdrawal(options: CoinpaymentsCreateWithdrawalOpts, callback?: CoinpaymentsReturnCallback<CoinpaymentsCreateWithdrawalResponse>): Promise<CoinpaymentsCreateWithdrawalResponse>;
    createMassWithdrawal(withdrawalArray: CoinpaymentsCreateMassWithdrawalOpts, callback?: CoinpaymentsReturnCallback<CoinpaymentsCreateMassWithdrawalResponse>): Promise<CoinpaymentsCreateMassWithdrawalResponse>;
    cancelWithdrawal(options: CoinpaymentsCancelWithdrawalOpts, callback?: CoinpaymentsReturnCallback<CoinpaymentsCancelWithdrawalOpts>): Promise<CoinpaymentsCancelWithdrawalOpts>;
    getTx(options: CoinpaymentsGetTxOpts, callback?: CoinpaymentsReturnCallback<CoinpaymentsGetTxResponse>): Promise<CoinpaymentsGetTxResponse>;
    getWithdrawalInfo(options: CoinpaymentsGetWithdrawalInfoOpts, callback?: CoinpaymentsReturnCallback<CoinpaymentsGetWithdrawalInfoResponse>): Promise<CoinpaymentsGetWithdrawalInfoResponse>;
    getTxMulti(txIdArray: CoinpaymentsGetTxMultiOpts, callback?: CoinpaymentsReturnCallback<CoinpaymentsGetTxMultiResponse>): any;
    getTxList(options?: CoinpaymentsGetTxListOpts | CoinpaymentsReturnCallback<CoinpaymentsGetTxListResponse>, callback?: CoinpaymentsReturnCallback<CoinpaymentsGetTxListResponse>): Promise<CoinpaymentsGetTxListResponse>;
    getBasicInfo(callback?: CoinpaymentsReturnCallback<CoinpaymentsGetBasicInfoResponse>): Promise<CoinpaymentsGetBasicInfoResponse>;
    getDepositAddress(options: CoinpaymentsGetDepositAddressOpts, callback?: CoinpaymentsReturnCallback<CoinpaymentsGetDepositAddressResponse>): Promise<CoinpaymentsGetDepositAddressResponse>;
    getCallbackAddress(options: CoinpaymentsGetCallbackAddressOpts, callback?: CoinpaymentsReturnCallback<CoinpaymentsGetCallbackAddressResponse>): Promise<CoinpaymentsGetCallbackAddressResponse>;
    createTransfer(options: CoinpaymentsCreateTransferOpts, callback?: CoinpaymentsReturnCallback<CoinpaymentsCreateTransferResponse>): Promise<CoinpaymentsCreateTransferResponse>;
    convertCoins(options: CoinpaymentsConvertCoinsOpts, callback?: CoinpaymentsReturnCallback<CoinpaymentsConvertCoinsResponse>): Promise<CoinpaymentsConvertCoinsResponse>;
    convertLimits(options: CoinpaymentsConvertLimitsOpts, callback?: CoinpaymentsReturnCallback<CoinpaymentsConvertLimitsResponse>): Promise<CoinpaymentsConvertLimitsResponse>;
    getWithdrawalHistory(options?: CoinpaymentsGetWithdrawalHistoryOpts | CoinpaymentsReturnCallback<CoinpaymentsGetWithdrawalHistoryResponse>, callback?: CoinpaymentsReturnCallback<CoinpaymentsGetWithdrawalHistoryResponse>): Promise<CoinpaymentsGetWithdrawalHistoryResponse>;
    getConversionInfo(options: CoinpaymentsGetConversionInfoOpts, callback?: CoinpaymentsReturnCallback<CoinpaymentsConversionInfoResponse>): Promise<CoinpaymentsConversionInfoResponse>;
    getProfile(options: CoinpaymentsGetProfileOpts, callback?: CoinpaymentsReturnCallback<CoinpaymentsGetProfileResponse>): Promise<CoinpaymentsGetProfileResponse>;
    tagList(callback?: CoinpaymentsReturnCallback<CoinpaymentsTagListResponse>): Promise<CoinpaymentsTagListResponse>;
    updateTagProfile(options: CoinpaymentsUpdateTagProfileOpts, callback?: CoinpaymentsReturnCallback<CoinpaymentsUpdateTagProfileResponse>): Promise<[]>;
    claimTag(options: CoinpaymentsClaimTagOpts, callback?: CoinpaymentsReturnCallback<CoinpaymentsClaimTagResponse>): Promise<[]>;
    renewTag(options: CoinpaymentsRenewTagOpts, callback?: CoinpaymentsReturnCallback<CoinpaymentsRenameTagResponse>): Promise<[]>;
    deleteTag(options: CoinpaymentsDeleteTagOpts, callback?: CoinpaymentsReturnCallback<CoinpaymentsDeleteTagResponse>): Promise<[]>;
    claimCoupon(options: CoinpaymentsClaimCouponOpts, callback?: CoinpaymentsReturnCallback<CoinpaymentsClaimCouponResponse>): Promise<[]>;
    buyTag(options: CoinpaymentsBuyTagOpts, callback?: CoinpaymentsReturnCallback<CoinpaymentsBuyTagResponse>): Promise<[]>;
}
export { Coinpayments };
export default Coinpayments;
