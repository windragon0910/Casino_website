"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.mapGetTxMultiPayload = exports.mapMassWithdrawalPayload = exports.mapMassWithdrawalTarget = exports.mapPayload = void 0;
var mapPayload = function (opts, defaultRequestFields) {
    return __assign(__assign({}, defaultRequestFields), opts);
};
exports.mapPayload = mapPayload;
var mapMassWithdrawalTarget = function (w) {
    if ('address' in w)
        return ['address', w.address];
    if ('domain' in w)
        return ['domain', w.domain];
    return ['pbntag', w.pbntag];
};
exports.mapMassWithdrawalTarget = mapMassWithdrawalTarget;
var mapMassWithdrawalPayload = function (withdrawalArray, defaultFields) {
    var payload = withdrawalArray.reduce(function (ops, w, index) {
        ops["wd[wd".concat(index + 1, "][amount]")] = w.amount;
        var _a = (0, exports.mapMassWithdrawalTarget)(w), target = _a[0], value = _a[1];
        ops["wd[wd".concat(index + 1, "][").concat(target, "]")] = value;
        ops["wd[wd".concat(index + 1, "][currency]")] = w.currency;
        if (w.dest_tag) {
            ops["wd[wd".concat(index + 1, "][dest_tag]")] = w.dest_tag;
        }
        if (w.add_tx_fee) {
            ops["wd[wd".concat(index + 1, "][add_tx_fee]")] = w.add_tx_fee;
        }
        if (w.hasOwnProperty('auto_confirm')) {
            ops["wd[wd".concat(index + 1, "][auto_confirm]")] = w.auto_confirm;
        }
        if (w.currency2) {
            ops["wd[wd".concat(index + 1, "][currency2]")] = w.currency2;
        }
        if (w.ipn_url) {
            ops["wd[wd".concat(index + 1, "][ipn_url]")] = w.ipn_url;
        }
        if (w.note) {
            ops["wd[wd".concat(index + 1, "][note]")] = w.note;
        }
        return ops;
    }, {});
    return __assign(__assign({}, defaultFields), payload);
};
exports.mapMassWithdrawalPayload = mapMassWithdrawalPayload;
var mapGetTxMultiPayload = function (txArray, defaultFields) {
    var payload = { txid: txArray.join('|') };
    return __assign(__assign({}, defaultFields), payload);
};
exports.mapGetTxMultiPayload = mapGetTxMultiPayload;
